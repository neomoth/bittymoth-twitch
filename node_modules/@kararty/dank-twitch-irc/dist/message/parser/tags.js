"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseTags = exports.decodeValue = void 0;
const decodeMap = {
    "\\\\": "\\",
    "\\:": ";",
    "\\s": " ",
    "\\n": "\n",
    "\\r": "\r",
    "\\": "", // remove invalid backslashes
};
const decodeLookupRegex = /\\\\|\\:|\\s|\\n|\\r|\\/g;
// if value is undefined (no = in tagSrc) then value becomes null
function decodeValue(value) {
    if (value == null) {
        return null;
    }
    return value.replace(decodeLookupRegex, (m) => decodeMap[m] || "");
}
exports.decodeValue = decodeValue;
function parseTags(tagsSrc) {
    const tags = {};
    if (tagsSrc == null) {
        return tags;
    }
    for (const tagSrc of tagsSrc.split(";")) {
        const keyValueDelimiter = tagSrc.indexOf("=");
        // ">>>" turns any negative `keyValueDelimiter` into the max uint32, so we get the entire tagSrc for the key.
        const key = tagSrc.slice(0, keyValueDelimiter >>> 0);
        let valueSrc = null;
        if (keyValueDelimiter !== -1) {
            valueSrc = decodeValue(tagSrc.slice(keyValueDelimiter + 1));
        }
        tags[key] = valueSrc;
    }
    return tags;
}
exports.parseTags = parseTags;
//# sourceMappingURL=tags.js.map